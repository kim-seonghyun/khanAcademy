let graph = [
    [Infinity, 6, 1, 5, Infinity, Infinity],
    [6, Infinity, 5, Infinity, 3, Infinity],
    [1, 5, Infinity, 5, 6, 4],
    [5, Infinity, 5, Infinity, Infinity, 2],
    [Infinity, 3, 6, Infinity, Infinity, 6],
    [Infinity, Infinity, 4, 2, 6, Infinity],
  ];
  
  let visited = [0];
  let 연결된정점 = [];
  for (let i = 0; i < graph[0].length; i++) {
    if (graph[0][i] != Infinity) {
      //출발정점을 알아야함.
      연결된정점.push({ w: graph[0][i]-1, u: 0, v: i });
    }
  }
  
  for (let i = 0; i < graph.length; i++) {
    //단순 횟수
  
    연결된정점.sort(function (a, b) {
      if (a.w < b.w) {
        return -1;
      } else {
        return +1;
      }
    });
    
    while(visited.includes(연결된정점[0].v) && visited.includes(연결된정점[0].u)){
        연결된정점.splice(0,1);
        if(연결된정점.length ==0) return;
    }
    let min = 연결된정점[0];
    console.log(`${min.u + 1}와 ${min.v + 1}가 연결됐습니다`);
    
    visited.push(min.v);
    for (let i = 0; i < graph[min.v].length; i++) {
      if (graph[min.v][i] != Infinity && !visited.includes(i) ) {
        연결된정점.push({ w: graph[min.v][i]-1, u: min.v, v: i });
      }
    }
    
    
    연결된정점.splice(0, 1);
  }
  
